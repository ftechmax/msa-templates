name: Release

on:
  push:
    branches:
      - "main"
    paths:
      - 'src/**'
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: [ubuntu-latest]
    container: mcr.microsoft.com/dotnet/sdk:6.0-alpine
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"
          preferLatestVersion: true

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true

      - name: Run dotnet tests and coverage
        run: |-
          dotnet test ./src/templates/msa-api/ApplicationName.Api.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          dotnet test ./src/templates/msa-worker/ApplicationName.Worker.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: Create package
        run: dotnet pack ./src/MSA.Templates.csproj -p:PackageVersion=${{ steps.gitversion.outputs.semVer }} -c Release

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish package
        run: |-
          dotnet nuget push ./artifacts/*${{ steps.gitversion.outputs.semVer }}.nupkg --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.gitversion.outputs.semVer }}
          commit: "main"
          name: Release ${{ steps.gitversion.outputs.semVer }}
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
